/**
* This file was auto-generated by orm4tmql.
*
* Generation-Time: 04.12.09 11:04
*/

package de.topicmapslab.aranuka.codegen.core.cached.generated;

import annoTM.core.annotations.*;
import java.net.*;
import java.util.*;
import de.topicmapslab.aranuka.codegen.properties.*;
import gnu.trove.*;
import de.topicmapslab.aranuka.codegen.core.exception.*;
import de.topicmapslab.aranuka.codegen.core.utility.*;


@Topic(name="Republic", si="http://en.wikipedia.org/wiki/Republic")
public class Republic {

private boolean modified = false;

private final org.tmapi.core.Topic topic;

public Republic(org.tmapi.core.Topic topic){
	this.topic = topic;
}


/*
* field definition for itemIdentifiers
*/
@Id(type=IDTYPE.ITEM_IDENTIFIER)
private Set<String> itemIdentifiers ;

/*
* field definition for subjectIdentifiers
*/
@Id(type=IDTYPE.SUBJECT_IDENTIFIER)
private Set<String> subjectIdentifiers ;

/*
* field definition for subjectLocators
*/
@Id(type=IDTYPE.SUBJECT_LOCATOR)
private Set<String> subjectLocators ;

/*
* field definition for topicname
*/
@Name(type="tm:name")
private String topicname ;

/*
* field definition for website
*/
@Occurrence(type="Website")
private String website ;

/*
* field definition for population
*/
@Occurrence(type="Population")
private String population ;

/**
* get()-method for itemIdentifiers
*/
public Set<String> getItemIdentifiers() throws TopicMap2JavaMapperException{
	if ( this.itemIdentifiers == null ){
		this.itemIdentifiers = (Set<String>) PropertyLoader.getInstance().getDataBridge().getIdentifiers(this.topic,IDTYPE.ITEM_IDENTIFIER );
	}
	return this.itemIdentifiers;
}

/**
* add()-method for itemIdentifiers
*/
public void addItemIdentifiers(final Set<String> itemIdentifiers)  throws TopicMap2JavaMapperException{
	if ( this.itemIdentifiers == null ){
		getItemIdentifiers();
	}
	this.itemIdentifiers.addAll(itemIdentifiers);
	this.modified = true;
}

/**
* get()-method for subjectIdentifiers
*/
public Set<String> getSubjectIdentifiers() throws TopicMap2JavaMapperException{
	if ( this.subjectIdentifiers == null ){
		this.subjectIdentifiers = (Set<String>) PropertyLoader.getInstance().getDataBridge().getIdentifiers(this.topic,IDTYPE.SUBJECT_IDENTIFIER );
	}
	return this.subjectIdentifiers;
}

/**
* add()-method for subjectIdentifiers
*/
public void addSubjectIdentifiers(final Set<String> subjectIdentifiers)  throws TopicMap2JavaMapperException{
	if ( this.subjectIdentifiers == null ){
		getSubjectIdentifiers();
	}
	this.subjectIdentifiers.addAll(subjectIdentifiers);
	this.modified = true;
}

/**
* get()-method for subjectLocators
*/
public Set<String> getSubjectLocators() throws TopicMap2JavaMapperException{
	if ( this.subjectLocators == null ){
		this.subjectLocators = (Set<String>) PropertyLoader.getInstance().getDataBridge().getIdentifiers(this.topic,IDTYPE.SUBJECT_LOCATOR );
	}
	return this.subjectLocators;
}

/**
* add()-method for subjectLocators
*/
public void addSubjectLocators(final Set<String> subjectLocators)  throws TopicMap2JavaMapperException{
	if ( this.subjectLocators == null ){
		getSubjectLocators();
	}
	this.subjectLocators.addAll(subjectLocators);
	this.modified = true;
}

/**
* get()-method for topicname
*/
public String getTopicname() throws TopicMap2JavaMapperException{
	if ( this.topicname == null ){
		this.topicname = (String) PropertyLoader.getInstance().getDataBridge().getField(this.topic,"tm:name" );
	}
	return this.topicname;
}

/**
* set()-method for topicname
*/
public void setTopicname(final String topicname) throws TopicMap2JavaMapperException {
	if ( this.topicname == null ){
		getTopicname();
	}
	this.topicname = topicname;
	modified = true;
}

/**
* get()-method for website
*/
public String getWebsite() throws TopicMap2JavaMapperException{
	if ( this.website == null ){
		this.website = (String) PropertyLoader.getInstance().getDataBridge().getField(this.topic,"Website" );
	}
	return this.website;
}

/**
* set()-method for website
*/
public void setWebsite(final String website) throws TopicMap2JavaMapperException {
	if ( this.website == null ){
		getWebsite();
	}
	this.website = website;
	modified = true;
}

/**
* get()-method for population
*/
public String getPopulation() throws TopicMap2JavaMapperException{
	if ( this.population == null ){
		this.population = (String) PropertyLoader.getInstance().getDataBridge().getField(this.topic,"Population" );
	}
	return this.population;
}

/**
* set()-method for population
*/
public void setPopulation(final String population) throws TopicMap2JavaMapperException {
	if ( this.population == null ){
		getPopulation();
	}
	this.population = population;
	modified = true;
}

}

